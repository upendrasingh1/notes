https://medium.com/softwaresanders/productionalizing-spark-streaming-applications-a18377edb81f
https://aws.amazon.com/blogs/big-data/best-practices-for-successfully-managing-memory-for-apache-spark-applications-on-amazon-emr/

https://barrelsofdata.com/data-deduplication-spark-state-store/

https://github.com/HeartSaVioR/spark-sql-kafka-offset-committer
https://blog.clairvoyantsoft.com/productionalizing-spark-streaming-applications-4d1c8711c7b0
https://github.com/datastax/code-samples/blob/master/spark_kafka_streaming/streaming/src/main/scala/sparkKafkaDemo/StreamingDirectEmails.scala

https://blog.stratio.com/optimizing-spark-streaming-applications-apache-kafka/

(Important yarn constants in EMR)
https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-hadoop-task-config.html#emr-hadoop-task-config-m3
https://big-data-demystified.ninja/2018/06/07/here-is-example-to-demonstrate-how-to-work-with-maximizeresourceallocation-and-spark-dynamicallocation/
https://blog.clairvoyantsoft.com/productionalizing-spark-streaming-applications-4d1c8711c7b0
https://gist.github.com/meysampg/b09e1946113c162221cb4bd24f05a0c0

https://blog.cads.live/gracefully-stop-spark-structured-streaming-jobs-on-yarn/#:~:text=A%20graceful%20shutdown%20means%20completing,duplicate%20data%20upon%20stream%20restart.

https://github.com/aws-samples/spark-streaming-sql-s3-connector

https://yurita.readthedocs.io/en/latest/
https://github.com/paypal/yurita
